{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","btnSection","map","type","btn","key","onClick","Statistics","props","stats","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","Styles","App","state","update","setState","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","PositiveState","totalFeedback","Math","round","this","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,IAAM,+B,mKCuB1DC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAGlC,OACE,yBAAKC,UAAWC,IAAOC,YACpBJ,EAAQK,KAAI,SAACC,GAAD,OACX,4BAAQJ,UAAWC,IAAOI,IAAKC,IAAKF,EAAMA,KAAK,SAASG,QAAS,kBAAMR,EAAgBK,KACpFA,Q,gBCcII,MArBf,SAAoBC,GAClB,OACE,oCACE,wBAAIT,UAAWC,IAAOS,OACpB,qCAAWD,EAAME,MACjB,wCAAcF,EAAMG,SACpB,oCAAUH,EAAMI,KAChB,sCAAYJ,EAAMK,OAClB,kDAAwBL,EAAMM,mBAA9B,QCVFC,EAAU,SAACP,GAAD,OACd,oCACE,4BAAKA,EAAMQ,OACVR,EAAMS,WAIXF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,Q,gBCfA,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,6BACE,wBAAIrB,UAAWsB,IAAOL,OAAQI,I,ICDfE,E,4MACnBC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,OAAS,SAACrB,GAER,EAAKsB,UAAS,SAACF,GACb,OAAO,eACJpB,EAAOoB,EAAMpB,GAAQ,O,EAK5BuB,mBAAqB,SAACH,GACpB,OAAOI,OAAOC,OAAOL,GAAOM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,I,EAG5DC,gCAAkC,SAACC,EAAeC,GAChD,OAAOC,KAAKC,MAAOH,EAAgBC,EAAiB,M,uDAG5C,IAAD,EACwBG,KAAKd,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQwB,KAAKX,mBAAmBW,KAAKd,OAErCT,EAAqBuB,KAAKL,gCAC9BtB,EACAG,GAKF,OACE,oCACE,kBAAC,EAAD,CAASG,MAAM,0BACf,kBAAC,EAAD,CACEnB,QANgB,CAAC,OAAQ,UAAW,OAOpCC,gBAAiBuC,KAAKb,SAExB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASR,MAAM,eAEdH,EAAQ,EACP,kBAACM,EAAD,CAAcC,QAAQ,sBAEtB,kBAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAIxB,kBAAC,EAAD,W,GA1DyBwB,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCJhDhD,EAAOC,QAAU,CAAC,MAAQ,4B,kBCA1BD,EAAOC,QAAU,CAAC,MAAQ,+B","file":"static/js/main.5b28081a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSection\":\"FeedbackOptions_btnSection__1Ufzy\",\"btn\":\"FeedbackOptions_btn__uiI-p\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n \r\n\r\n  return (\r\n    <div className={styles.btnSection}>\r\n      {options.map((type) => (\r\n        <button className={styles.btn} key={type} type=\"button\" onClick={() => onLeaveFeedback(type)}>\r\n          {type}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\n\r\nfunction Statistics(props) {\r\n  return (\r\n    <>\r\n      <ul className={styles.stats}>\r\n        <li>Good: {props.good}</li>\r\n        <li>Neutral: {props.neutral}</li>\r\n        <li>Bad: {props.bad}</li>\r\n        <li>Total: {props.total}</li>\r\n        <li>Positive feedback: {props.positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = (props) => (\r\n  <>\r\n    <h2>{props.title}</h2>\r\n    {props.children}\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <div>\r\n      <h2 className={Styles.title}>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Section from \"./Section/Section\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  update = (type) => {\r\n    \r\n    this.setState((state) => {\r\n      return {\r\n        [type]: state[type] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = (state) => {\r\n    return Object.values(state).reduce((acc, el) => acc + el, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (PositiveState, totalFeedback) => {\r\n    return Math.round((PositiveState / totalFeedback) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const total = this.countTotalFeedback(this.state);\r\n\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(\r\n      good,\r\n      total\r\n    );\r\n\r\n    const feedbackTypes = [\"good\", \"neutral\", \"bad\"];\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\" />\r\n        <FeedbackOptions\r\n          options={feedbackTypes}\r\n          onLeaveFeedback={this.update}\r\n        />\r\n        <Section />\r\n        <Section title=\"Statistics\" />\r\n\r\n        {total < 1 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        )}\r\n\r\n        <Section />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__1f0bj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3dcBG\"};"],"sourceRoot":""}